@use 'sass:list';
@use 'sass:map';
@use '../../theme/index' as *;

.ded-avatar-wrapper {
  display: flex;
  gap: $spacing-12;
  box-sizing: border-box;
}

// .ded-avatar-overlay {
//   margin-left: -16px;
// }

.ded-avatar-container {
  position: relative;
  box-shadow: 0 0 0 2px list.nth($neutral-0, $site);
  border-radius: $radius-999;
}

.ded-avatar {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  overflow: hidden;
  background-color: list.nth($neutral-50, $site);

  &-pic {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  &-icon {
    position: absolute;
    bottom: -2px;
    right: -2px;
    border-radius: $radius-999;
    background-color: list.nth($neutral-0, $site);
  }

  &-text {
    color: $color-gray60;
    font-size: $font-size-14;
  }
}

.ded-avatar-info {
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;

  &-name {
    font-size: $font-size-13;
    color: list.nth($text-primary, $site);
  }

  &-caption {
    font-size: $font-size-12;
    color: list.nth($text-helper, $site);
  }
}

@each $size in $sizes {
  .ded-avatar-container-#{$size} {
    width: map.get($avatar-size, $size);
    height: map.get($avatar-size, $size);
  }

  .ded-avatar-icon-#{$size} {
    width: map.get($icon-size, $size);
    height: map.get($icon-size, $size);
  }
}

@each $status in $avatarStatus {
  .ded-avatar-icon-#{$status} {
    color: getAvatarStatusColor($status);
  }
}

@each $shape in $avatarShape {
  .ded-avatar-#{$shape} {
    border-radius: getAvatarShape($shape);
  }
}